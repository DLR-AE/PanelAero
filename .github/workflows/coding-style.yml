# This workflow will install and then lint the code with Flake8 and Pylint.
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Coding style

on:
  push:
    branches: ['master', 'devel']
  pull_request:
    branches: '*'
  schedule:
    - cron: '0 2 * * 0'

permissions:
  contents: read

jobs:
  Flake8:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Add multiple Python versions here to run tests on new(er) versions.
        python-version: ["3.10"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # The GitHub editor is 127 chars wide
        flake8 . --count --max-line-length=127 --max-complexity=15 --statistics

  Pylint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
      # Add multiple Python versions here to run tests on new(er) versions.
        python-version: ["3.10"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint
        # Install the package itself to make sure that all imports work.
        pip install .
    - name: Analysing the code with pylint
      run: |
        pylint $(git ls-files '*.py') --fail-under=8.0